https://leetcode.com/problems/transpose-matrix/
class Solution {
public:
	vector<vector<int>> transpose(vector<vector<int>>& A) {
		int k, i, j;
		if (A.size() == A[0].size()) {
			for (i = 0; i < A.size(); i++) {
				for (j = i + 1; j < A[i].size(); j++) {
					k = A[i][j];
					A[i][j] = A[j][i];
					A[j][i] = k;
				}
			}
			return A;
		}
		else {
			if (A.size() < A[0].size()) {
				vector<vector<int>> B;
				B.resize(A[0].size());
				for (i = 0; i < A[0].size(); i++) {
					B[i].resize(A.size());
					for (j = 0; j < A.size(); j++) {
						B[i][j] = A[j][i];
					}
				}
				return B;
			}
			else {
				vector<vector<int>> B;
				B.resize(A[0].size());
				for (i = 0; i < A[0].size(); i++) {
					B[i].resize(A.size());
					for (j = 0; j < A.size(); j++) {
						B[i][j] = A[j][i];
					}
				}
				return B;
			}
		}
		return A;
	}
};
