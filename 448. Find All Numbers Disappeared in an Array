https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/
class Solution {
public:
    vector<int> findDisappearedNumbers(vector<int>& nums) {
        if(nums.size()==0){
            return nums;
        }
        vector <int> res;
        sort(nums.begin(),nums.end());
        if(nums[0]>1){
            for(int j=0; j<nums[0]-1; j++ ){
                res.push_back(1+j);
            }
        }int i = 0;
        //for(int i = 0; i<nums.size()-1; i++){
          while(i<nums.size()-1){
            if (nums[i+1]-nums[i]<2){\
                i++;
                   while((i<nums.size()-1)&&(nums[i+1]-nums[i]==0)){
                       i++;
                   }
               }else{
               for(int j= nums[i+1]-nums[i]-1; j>0; j--){
                   res.push_back(nums[i+1]-j);
               }
                i++;
           }
           }
        if (nums[nums.size()-1]<nums.size()){
            for(int j= 0; j<nums.size()-nums[nums.size()-1]; j++){
                res.push_back(nums[nums.size()-1]+j+1);
            }
        }
        return res;
    }
};

void trimLeftTrailingSpaces(string &input) {
    input.erase(input.begin(), find_if(input.begin(), input.end(), [](int ch) {
        return !isspace(ch);
    }));
}

void trimRightTrailingSpaces(string &input) {
    input.erase(find_if(input.rbegin(), input.rend(), [](int ch) {
        return !isspace(ch);
    }).base(), input.end());
}

vector<int> stringToIntegerVector(string input) {
    vector<int> output;
    trimLeftTrailingSpaces(input);
    trimRightTrailingSpaces(input);
    input = input.substr(1, input.length() - 2);
    stringstream ss;
    ss.str(input);
    string item;
    char delim = ',';
    while (getline(ss, item, delim)) {
        output.push_back(stoi(item));
    }
    return output;
}

string integerVectorToString(vector<int> list, int length = -1) {
    if (length == -1) {
        length = list.size();
    }

    if (length == 0) {
        return "[]";
    }

    string result;
    for(int index = 0; index < length; index++) {
        int number = list[index];
        result += to_string(number) + ", ";
    }
    return "[" + result.substr(0, result.length() - 2) + "]";
}

int main() {
    string line;
    while (getline(cin, line)) {
        vector<int> nums = stringToIntegerVector(line);
        
        vector<int> ret = Solution().findDisappearedNumbers(nums);

        string out = integerVectorToString(ret);
        cout << out << endl;
    }
    return 0;
}
