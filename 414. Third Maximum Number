https://leetcode.com/problems/third-maximum-number/
class Solution {
public:
    int thirdMax(vector<int>& nums) {
        if(nums.size()==0){
            return 0;
        }
        if(nums.size() ==1){
            return nums[0];
        }
        if(nums.size() ==2){
            if(nums[0]>nums[1]){
                return nums[0];
            }else{
                return nums[1];
            }
        }
        sort(nums.begin(), nums.end());
        int kol = 0;
        for(int i = 0; i<nums.size()-1; i++){
            if(nums[i]!=nums[i+1]){
                kol +=1;
            }
        }
        if(kol<2){
            int max = 0;
            for(int j = 0; j<3; j++){
                max = nums[0];
                for(int i = 1; i<nums.size(); i++){
                    if(max<nums[i]){
                        max = nums[i];
                    }
                }
            }
            return max;
        }
        int max = 0;
        for(int j = 0; j<3; j++){
            max = nums[0];
            for(int i = 1; i<nums.size(); i++){
                if(max<nums[i]){
                    max = nums[i];
                }
            }
            int i = 0;
            while(i < nums.size()){
                if(nums[i] == max){
                    nums.erase(nums.begin()+i, nums.begin()+i+1);
                    if(i!=0){
                        i--;
                    }
                }
                i++;
            }
        }
        return max;
    }
};

void trimLeftTrailingSpaces(string &input) {
    input.erase(input.begin(), find_if(input.begin(), input.end(), [](int ch) {
        return !isspace(ch);
    }));
}

void trimRightTrailingSpaces(string &input) {
    input.erase(find_if(input.rbegin(), input.rend(), [](int ch) {
        return !isspace(ch);
    }).base(), input.end());
}

vector<int> stringToIntegerVector(string input) {
    vector<int> output;
    trimLeftTrailingSpaces(input);
    trimRightTrailingSpaces(input);
    input = input.substr(1, input.length() - 2);
    stringstream ss;
    ss.str(input);
    string item;
    char delim = ',';
    while (getline(ss, item, delim)) {
        output.push_back(stoi(item));
    }
    return output;
}

int main() {
    string line;
    while (getline(cin, line)) {
        vector<int> nums = stringToIntegerVector(line);
        
        int ret = Solution().thirdMax(nums);

        string out = to_string(ret);
        cout << out << endl;
    }
    return 0;
}
