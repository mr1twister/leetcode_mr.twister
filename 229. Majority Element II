https://leetcode.com/problems/majority-element-ii/
class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        vector<int> k;
        vector<int> c;
        vector<int>res;
        if(nums.size()==0){
            return nums;
        }
        if(nums.size()==1){
            return nums;
        }
        if(nums.size()==2){
            if(nums[0]!=nums[1]){
                return  nums;
            }else{
                res.push_back(nums[0]);
                return res;
            }
        }
        sort(nums.begin(), nums.end());
        for(int i = 1;i<nums.size(); i++){
            int kol = 1;
            while(i<nums.size() && nums[i-1]==nums[i]){
                kol++;
                i++;
            }
            if(kol >1){
                i--;
            }
            k.push_back(kol);
            c.push_back(nums[i-1]);
        }
        for(int i = 0; i<k.size();i++){
            if(k[i]>nums.size()/3){
                res.push_back(c[i]);
            }
        }
        return res;
    }
};

void trimLeftTrailingSpaces(string &input) {
    input.erase(input.begin(), find_if(input.begin(), input.end(), [](int ch) {
        return !isspace(ch);
    }));
}

void trimRightTrailingSpaces(string &input) {
    input.erase(find_if(input.rbegin(), input.rend(), [](int ch) {
        return !isspace(ch);
    }).base(), input.end());
}

vector<int> stringToIntegerVector(string input) {
    vector<int> output;
    trimLeftTrailingSpaces(input);
    trimRightTrailingSpaces(input);
    input = input.substr(1, input.length() - 2);
    stringstream ss;
    ss.str(input);
    string item;
    char delim = ',';
    while (getline(ss, item, delim)) {
        output.push_back(stoi(item));
    }
    return output;
}

string integerVectorToString(vector<int> list, int length = -1) {
    if (length == -1) {
        length = list.size();
    }

    if (length == 0) {
        return "[]";
    }

    string result;
    for(int index = 0; index < length; index++) {
        int number = list[index];
        result += to_string(number) + ", ";
    }
    return "[" + result.substr(0, result.length() - 2) + "]";
}

int main() {
    string line;
    while (getline(cin, line)) {
        vector<int> nums = stringToIntegerVector(line);
        
        vector<int> ret = Solution().majorityElement(nums);

        string out = integerVectorToString(ret);
        cout << out << endl;
    }
    return 0;
}
