https://leetcode.com/problems/maximum-number-of-balloons/
class Solution {
public:
    int maxNumberOfBalloons(string text) {
        vector<int> kol(5);
        for(int i = 0; i<text.size(); i++){
            if(text[i]=='b'){
                kol[0]+=1;
            }
             if(text[i]=='a'){
                kol[1]+=1;
            }
             if(text[i]=='l'){
                kol[2]+=1;
            }
             if(text[i]=='o'){
                kol[3]+=1;
            }
             if(text[i]=='n'){
                kol[4]+=1;
            }
        }
        kol[2] = kol[2]/2;
        kol[3] = kol[3]/2;
        int min = kol[0];
        for(int i = 1; i<kol.size(); i++){
            if(min>kol[i]){
                min = kol[i];
            }
        }
        return min;
    }
};

string stringToString(string input) {
    assert(input.length() >= 2);
    string result;
    for (int i = 1; i < input.length() -1; i++) {
        char currentChar = input[i];
        if (input[i] == '\\') {
            char nextChar = input[i+1];
            switch (nextChar) {
                case '\"': result.push_back('\"'); break;
                case '/' : result.push_back('/'); break;
                case '\\': result.push_back('\\'); break;
                case 'b' : result.push_back('\b'); break;
                case 'f' : result.push_back('\f'); break;
                case 'r' : result.push_back('\r'); break;
                case 'n' : result.push_back('\n'); break;
                case 't' : result.push_back('\t'); break;
                default: break;
            }
            i++;
        } else {
          result.push_back(currentChar);
        }
    }
    return result;
}

int main() {
    string line;
    while (getline(cin, line)) {
        string text = stringToString(line);
        
        int ret = Solution().maxNumberOfBalloons(text);

        string out = to_string(ret);
        cout << out << endl;
    }
    return 0;
}
