https://leetcode.com/problems/pascals-triangle-ii/
class Solution {
public:
    vector<int> getRow(int rowIndex) {
        vector<int> res;
        vector<vector<int>> tr;
        tr.resize(rowIndex+1);
        for(int i=0; i<=rowIndex; i++){
            tr[i].resize(i+1);
            for(int j=0;j<=i ;j++){
                if(i==j || j==0){
                    tr[i][j] =1 ;
                }
                else{
                    tr[i][j] = tr[i-1][j-1] + tr[i-1][j];
                }
            }
        }
        
        for(int j=0 ; j<=rowIndex; j++){
            res.push_back(tr[rowIndex][j]);
        }
        
        return res;    
    }
};

int stringToInteger(string input) {
    return stoi(input);
}

string integerVectorToString(vector<int> list, int length = -1) {
    if (length == -1) {
        length = list.size();
    }

    if (length == 0) {
        return "[]";
    }

    string result;
    for(int index = 0; index < length; index++) {
        int number = list[index];
        result += to_string(number) + ", ";
    }
    return "[" + result.substr(0, result.length() - 2) + "]";
}

int main() {
    string line;
    while (getline(cin, line)) {
        int rowIndex = stringToInteger(line);
        
        vector<int> ret = Solution().getRow(rowIndex);

        string out = integerVectorToString(ret);
        cout << out << endl;
    }
    return 0;
}
