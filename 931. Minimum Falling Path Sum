https://leetcode.com/problems/minimum-falling-path-sum/
class Solution {
public:
	int minFallingPathSum(vector < vector < int>>& A) {
		int n = A.size();
		if (n == 0){ 
            return 0;
        }
		if (n == 1){ 
            return A[0][0];
        }
		for (int i = 1; i < n; i++){
			for (int j = 0; j < n; j++){
				if (j == 0){
					A[i][j] += min(A[i - 1][j], A[i - 1][j + 1]);
                }
                else{
					if (j == n - 1){
						A[i][j] += min(A[i - 1][j], A[i - 1][j - 1]);
                    }
					else{
						A[i][j] += min(min(A[i - 1][j - 1], A[i - 1][j + 1]), A[i - 1][j]);
                    }
				}
			}
		}
		int mini = A[n - 1][0];
		for (int i = 1; i < n; i++){
			mini = min(mini, A[n - 1][i]);
        }
        return mini;
	}
};
